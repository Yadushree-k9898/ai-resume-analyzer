"""Add skills table

Revision ID: 92e975ba52b3
Revises: 87e94d66e873
Create Date: 2025-03-19 16:12:38.916185

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '92e975ba52b3'
down_revision: Union[str, None] = '87e94d66e873'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Create the 'skills' table
    op.create_table(
        'skills',
        sa.Column('id', sa.Integer(), primary_key=True, autoincrement=True),
        sa.Column('name', sa.String(length=255), unique=True, nullable=False)
    )

    # Keep only necessary modifications
    op.alter_column('users', 'username',
                    existing_type=sa.VARCHAR(),
                    nullable=False)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.add_column('resumes', sa.Column('job_matches', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.create_table('dashboard',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('total_resumes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('latest_resume_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('best_resume_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('resume_score', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('average_resume_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('total_jobs_applied', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('job_application_status', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('job_matches', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('total_job_matches', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('missing_skills', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('skills_analysis', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('last_updated', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['best_resume_id'], ['resumes.id'], name='dashboard_best_resume_id_fkey'),
    sa.ForeignKeyConstraint(['latest_resume_id'], ['resumes.id'], name='dashboard_latest_resume_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='dashboard_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='dashboard_pkey')
    )
    # ### end Alembic commands ###
